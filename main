import pandas as pd
import numpy as np
from scipy.cluster.hierarchy import dendrogram, linkage, fcluster
import matplotlib.pyplot as plt
import seaborn as sns

# Define the soil samples
samples = ['MS_788', 'MS_789', 'MS_900', 'MS_983', 'MS_986']

# Define the saturation levels for Nitrogen (N)
n_saturation = {
    'MS_788': 31.50,
    'MS_789': 38.50,
    'MS_900': 38.50,
    'MS_983': 21.00,
    'MS_986': 35.00
}

# Define the percentage of reflected light for each LED
led_data = {
    'White': [69.93, 70.00, 69.72, 69.93, 70.71],
    'Red': [69.03, 69.17, 69.03, 69.03, 69.31],
    'Yellow': [70.71, 70.92, 70.07, 70.21, 70.21],
    'Blue': [70.00, 69.79, 69.51, 69.65, 69.38],
    'Green': [70.07, 70.64, 71.14, 70.71, 70.42]
}

# Create a DataFrame for the LED data
led_df = pd.DataFrame(led_data, index=samples)

# Define the saturation thresholds for Nitrogen (N)
n_thresholds = {
    'Very Low': (0, 10),
    'Low': (10, 20),
    'Medium': (30, 40),
    'High': (40, 60),
    'Very High': (60, float('inf'))
}

def perform_clustering(data, method='ward', metric='euclidean'):
    Z = linkage(data, method=method, metric=metric)
    return Z

def plot_dendrogram(Z, labels, title):
    plt.figure(figsize=(10, 5))
    dendrogram(Z, labels=labels, leaf_rotation=90, leaf_font_size=12)
    plt.title(title)
    plt.xlabel('Soil Samples')
    plt.ylabel('Distance')
    plt.show()

def print_clusters(Z, k, labels):
    clusters = fcluster(Z, k, criterion='maxclust')
    cluster_dict = {label: cluster for label, cluster in zip(labels, clusters)}
    print(cluster_dict)

# Perform clustering for Nitrogen (N)
Z_n = perform_clustering(led_df.T, method='ward', metric='euclidean')
plot_dendrogram(Z_n, samples, 'Hierarchical Clustering for Nitrogen (N)')
print_clusters(Z_n, 3, samples)

# Define the saturation levels for Phosphorus (P) and Potassium (K)
p_saturation = {
    'MS_788': 4.27,
    'MS_789': 4.20,
    'MS_900': 32.55,
    'MS_983': 3.85,
    'MS_986': 30.53
}

k_saturation = {
    'MS_788': 398.56,
    'MS_789': 243.61,
    'MS_900': 298.08,
    'MS_983': 162.61,
    'MS_986': 618.12
}

# Perform clustering for Phosphorus (P)
Z_p = perform_clustering(led_df.T, method='ward', metric='euclidean')
plot_dendrogram(Z_p, samples, 'Hierarchical Clustering for Phosphorus (P)')
print_clusters(Z_p, 3, samples)

# Perform clustering for Potassium (K)
Z_k = perform_clustering(led_df.T, method='ward', metric='euclidean')
plot_dendrogram(Z_k, samples, 'Hierarchical Clustering for Potassium (K)')
print_clusters(Z_k, 3, samples)
